# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'new_ui.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import pandas as pd
from PyQt5 import QtCore, QtGui, QtWidgets

import utils
from tableWidget import TableWidget

STOCKS = utils.get_old_data()
NAME_STOCKS = utils.get_stock_list()


class UiMainWindow(QtWidgets.QMainWindow):
    def __init__(self):
        super().__init__()
        self.page = None
        self.statusbar = None
        self.index_low_input = None
        self.super_button = None
        self.hide_button = None
        self.index_high_input = None
        self.horizontal_layout_3 = None
        self.frame_3 = None
        self.setting_view = None
        self.stock_view = None
        self.horizontal_layout_2 = None
        self.stacked_widget = None
        self.index_email_checkbox = None
        self.page = None
        self.add_wishlist = None
        self.name_wishlist_input = None
        self.remove_wishlist = None
        self.wishlist_combo = None
        self.horizontal_layout = None
        self.frame_2 = None
        self.stock_input = None
        self.delete_stock_button = None
        self.add_stock_button = None
        self.vnindex_price = None
        self.hboxlayout = None
        self.frame = None
        self.vertical_layout = None
        self.centralwidget = None
        self.threadpool = None
        self.scraper = None
        self.image = None
        self.pixmap = None
        self.ninja_mode_shortcut = None
        self.delete_stock_shortcut = None
        self.color_checkbox = None
        self.vnindex = None

    def setup_ui(self):
        self.setObjectName("MainWindow")
        self.resize(843, 799)
        self.setWindowIcon(QtGui.QIcon(utils.resource_path('images/icon.png')))
        self.centralwidget = QtWidgets.QWidget(self)
        self.centralwidget.setObjectName("centralwidget")
        self.vertical_layout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.vertical_layout.setObjectName("vertical_layout")

        # FRAME 1
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.hboxlayout = QtWidgets.QHBoxLayout(self.frame)
        self.hboxlayout.setObjectName("hboxlayout")
        self.vnindex_price = QtWidgets.QLabel(self.frame)
        self.vnindex_price.setObjectName("vnindex_price")
        self.hboxlayout.addWidget(self.vnindex_price)
        spacer_item = QtWidgets.QSpacerItem(144, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.hboxlayout.addItem(spacer_item)
        self.stock_input = QtWidgets.QLineEdit(self.frame)
        self.stock_input.setObjectName("stock_input")
        self.hboxlayout.addWidget(self.stock_input)
        spacer_item1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.hboxlayout.addItem(spacer_item1)
        self.add_stock_button = QtWidgets.QPushButton(self.frame)
        self.add_stock_button.setObjectName("add_stock_button")
        self.hboxlayout.addWidget(self.add_stock_button)
        self.delete_stock_button = QtWidgets.QPushButton(self.frame)
        self.delete_stock_button.setObjectName("delete_stock_button")
        self.hboxlayout.addWidget(self.delete_stock_button)
        self.hboxlayout.setStretch(0, 1)
        self.hboxlayout.setStretch(1, 1)
        self.hboxlayout.setStretch(3, 1)
        self.vertical_layout.addWidget(self.frame)

        # FRAME 2
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.horizontal_layout = QtWidgets.QHBoxLayout(self.frame_2)
        self.horizontal_layout.setObjectName("horizontal_layout")
        self.wishlist_combo = QtWidgets.QComboBox(self.frame_2)
        self.wishlist_combo.setObjectName("wishlist_combo")
        self.wishlist_combo.addItems(list(STOCKS.keys()))
        self.horizontal_layout.addWidget(self.wishlist_combo)
        spacer_item2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontal_layout.addItem(spacer_item2)
        self.name_wishlist_input = QtWidgets.QLineEdit(self.frame_2)
        self.name_wishlist_input.setObjectName("name_wishlist_input")
        self.horizontal_layout.addWidget(self.name_wishlist_input)
        spacer_item3 = QtWidgets.QSpacerItem(143, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontal_layout.addItem(spacer_item3)
        self.add_wishlist = QtWidgets.QPushButton(self.frame_2)
        self.add_wishlist.setObjectName("add_wishlist")
        self.horizontal_layout.addWidget(self.add_wishlist)
        self.remove_wishlist = QtWidgets.QPushButton(self.frame_2)
        self.remove_wishlist.setObjectName("remove_wishlist")
        self.horizontal_layout.addWidget(self.remove_wishlist)
        self.horizontal_layout.setStretch(0, 1)
        self.horizontal_layout.setStretch(1, 1)
        self.horizontal_layout.setStretch(3, 1)
        self.vertical_layout.addWidget(self.frame_2)

        # STACKED WIDGET
        self.stock_view = []
        self.setting_view = []
        self.page = []
        self.stacked_widget = QtWidgets.QStackedWidget(self.centralwidget)
        self.stacked_widget.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.stacked_widget.setFrameShadow(QtWidgets.QFrame.Raised)
        self.stacked_widget.setObjectName("stacked_widget")
        for i, key in enumerate(STOCKS.keys()):
            self.page.append(QtWidgets.QWidget())
            self.page[-1].setObjectName("page")
            self.horizontal_layout_2 = QtWidgets.QHBoxLayout(self.page[-1])
            self.horizontal_layout_2.setObjectName("horizontal_layout_2")

            # get pandas from STOCKS
            table_df = pd.DataFrame(STOCKS[key])

            # add stock view table
            self.stock_view.append(TableWidget(df=table_df, parent=self.page[-1]))
            self.stock_view[-1].setRowCount(100)
            self.stock_view[-1].setColumnCount(10)
            self.stock_view[-1].setObjectName("stock_view")
            self.horizontal_layout_2.addWidget(self.stock_view[-1])

            # add setting view table
            self.setting_view.append(QtWidgets.QTableWidget(self.page[-1]))
            self.setting_view[-1].setRowCount(100)
            self.setting_view[-1].setColumnCount(2)
            self.setting_view[-1].setObjectName("setting_view")

            self.horizontal_layout_2.addWidget(self.setting_view[-1])
            self.horizontal_layout_2.setStretch(0, 7)
            self.horizontal_layout_2.setStretch(1, 3)
            self.stacked_widget.addWidget(self.page[-1])
        self.vertical_layout.addWidget(self.stacked_widget)

        # FRAME 3
        self.frame_3 = QtWidgets.QFrame(self.centralwidget)
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.horizontal_layout_3 = QtWidgets.QHBoxLayout(self.frame_3)
        self.horizontal_layout_3.setObjectName("horizontal_layout_3")
        self.super_button = QtWidgets.QPushButton(self.frame_3)
        self.super_button.setObjectName("super_button")
        self.horizontal_layout_3.addWidget(self.super_button)
        self.hide_button = QtWidgets.QPushButton(self.frame_3)
        self.hide_button.setObjectName("hide_button")
        self.horizontal_layout_3.addWidget(self.hide_button)
        self.index_low_input = QtWidgets.QLineEdit(self.frame_3)
        self.index_low_input.setObjectName("index_low_input")
        self.horizontal_layout_3.addWidget(self.index_low_input)
        self.index_high_input = QtWidgets.QLineEdit(self.frame_3)
        self.index_high_input.setObjectName("index_high_input")
        self.horizontal_layout_3.addWidget(self.index_high_input)
        self.index_email_checkbox = QtWidgets.QCheckBox(self.frame_3)
        self.index_email_checkbox.setObjectName("index_email_checkbox")
        self.horizontal_layout_3.addWidget(self.index_email_checkbox)
        self.color_checkbox = QtWidgets.QCheckBox(self.frame_3)
        self.color_checkbox.setObjectName("color_checkbox")
        self.horizontal_layout_3.addWidget(self.color_checkbox)
        self.vertical_layout.addWidget(self.frame_3)

        # STATUS BAR
        self.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(self)
        self.statusbar.setAutoFillBackground(False)
        self.statusbar.setObjectName("statusbar")
        self.setStatusBar(self.statusbar)

        # CALL OTHER FUNCTIONS
        self.stacked_widget.setCurrentIndex(0)
        self.restranlate_ui()
        for i, name in enumerate(STOCKS.keys()):
            self.config_setting_view(index=i, name=name)
        QtCore.QMetaObject.connectSlotsByName(self)

    def restranlate_ui(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("MainWindow", "Calculator"))
        self.vnindex_price.setText(_translate("MainWindow", "TextLabel"))
        self.add_stock_button.setText(_translate("MainWindow", "Insert"))
        self.delete_stock_button.setText(_translate("MainWindow", "Delete"))
        self.wishlist_combo.setItemText(0, _translate("MainWindow", str(next(iter(STOCKS)))))
        self.add_wishlist.setText(_translate("MainWindow", "Add"))
        self.remove_wishlist.setText(_translate("MainWindow", "Remove"))
        self.super_button.setText(_translate("MainWindow", "SUPER"))
        self.hide_button.setText(_translate("MainWindow", "Hide"))
        self.index_email_checkbox.setText(_translate("MainWindow", "Email"))
        self.color_checkbox.setText(_translate("MainWindow", "Color"))

    def config_setting_view(self, index, name):
        # -------------------CONFIG TABLE FOR SETTING TAB-------------------
        _translate = QtCore.QCoreApplication.translate
        # self.setting_view[index].setColumnWidth(0, 2)
        # self.setting_view[index].setColumnWidth(1, 2)
        # set column width to 40% of the table
        self.setting_view[index].setColumnWidth(
            0, int(self.setting_view[index].width() * 0.3))
        self.setting_view[index].setColumnWidth(
            1, int(self.setting_view[index].width() * 0.6))

        # set row height equal to stock view row height
        for i in range(self.setting_view[index].rowCount()):
            self.setting_view[index].setRowHeight(
                i, int(self.stock_view[index].rowHeight(i)))

        # email
        item = QtWidgets.QTableWidgetItem()
        item.setText(_translate("dialog", "Email"))
        self.setting_view[index].setHorizontalHeaderItem(0, item)

        # status of email
        item = QtWidgets.QTableWidgetItem()
        item.setText(_translate("dialog", "Status"))
        self.setting_view[index].setHorizontalHeaderItem(1, item)

        # make default of status is not send
        for row in range(self.setting_view[index].rowCount()):
            item = QtWidgets.QTableWidgetItem()
            self.setting_view[index].setItem(row, 1, item)
            self.setting_view[index].item(row, 1).setText(
                _translate("dialog", "Not send"))

        # make email column contain checkboxes
        for row in range(self.setting_view[index].rowCount()):
            email_checkbox = QtWidgets.QCheckBox(self.setting_view[index])
            self.setting_view[index].setCellWidget(row, 0, email_checkbox)
            email_checkbox.setChecked(False)
            email_checkbox.stateChanged.connect(
                lambda checked, row=row, col=0: self.email_checked_event(checked, row, col))

    def email_checked_event(self, checked, row, col):
        """
            overrided in child class
        """
        pass


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    self = QtWidgets.QMainWindow()
    ui = UiMainWindow()
    ui.setup_ui()
    self.show()
    sys.exit(app.exec_())
